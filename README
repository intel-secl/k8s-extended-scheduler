##############################################################################
Pre-requisites for building the scheduler from source
##############################################################################
Note: You can skip installation of pre-requisites if already installed.

1. Follow steps given in pre-requisites_README on kubernetes master.

2. Install glide vendor package management tool on the machine

	sudo add-apt-repository ppa:masterminds/glide && sudo apt-get update
	sudo apt-get install glide

3. Copy the source code to $GOPATH/src and run below command for build

        make

4. To Install run the below command
        make install

##############################################################################
Installation of binary on kubernetes master machine
##############################################################################
Pre-requisites

1. Generate Server cert for extended scheduler.
	cd <path_to_create_k8s_extsched_cert.sh> #Note: Certificates generation scripts are available in cit_k8s_extensions directory
	chmod +x create_k8s_extsched_cert.sh
	
	Note: ./create_k8s_extsched_cert.sh -h can be used to display script arguments. 
	Refer clientcerts_README for more details.
	
	./create_k8s_extsched_cert.sh <arguments> 
	#Example: ./create_k8s_extsched_cert.sh -c /etc/kubernetes/pki/ca.crt -k /etc/kubernetes/pki/ca.key -s "kubernetesmaster2.iind.intel.com,kubernetesmaster2"


2. Create tag_prefix.conf file in k8s master machine with below json.
        {
                "trusted":<<prefix for trust tag>>
        }

3.  Edit the citk8sscheduler.service file as below with tag_prefix.conf file path

	vi /etc/systemd/system/citk8sscheduler.service 

	ExecStart=/opt/cit_k8s_extensions/bin/citk8sscheduler-1.0-SNAPSHOT -trustedprefixconf=<path>/tag_prefix.conf


STEPS:
1. In order to bring up the Kubernetes cluster along with the extended scheduler, we need to:

	(a) Create scheduler_policy.json file as per the template below. This contains the configration required by base scheduler to reach the extended scheduler. This file should be placed with the extended scheduler binary (inside /opt/cit_k8s_extensions/bin). Rewrite URL as per IP address and port.
	
	{
		"kind" : "Policy",
		"apiVersion" : "v1",
		"predicates" : [
			{"name" : "PodFitsHostPorts"},
			{"name" : "PodFitsResources"},
			{"name" : "NoDiskConflict"},
			{"name" : "MatchNodeSelector"},
			{"name" : "HostName"}
			],
		"priorities" : [
			{"name" : "LeastRequestedPriority", "weight" : 1},
			{"name" : "BalancedResourceAllocation", "weight" : 1},
			{"name" : "ServiceSpreadingPriority", "weight" : 1},
			{"name" : "EqualPriority", "weight" : 1}
			],
		"extenders" : [
			{
        		"urlPrefix": "https://<<k8s master ip address>>:8888/",
        		"apiVersion": "v1beta1",
        		"filterVerb": "filter",
			"weight": 5,
        		"enableHttps": true
			}
    		]
	}
	
	(b) Create file kubeadm_policy.yaml and provide below extended scheduler config in it:

	apiVersion: kubeadm.k8s.io/v1alpha1
	kind: MasterConfiguration
	certificatesDir: "/etc/kubernetes/pki/"
	#tokenTTL: 0
	schedulerExtraArgs:
	  policy-config-file : "<path_to_scheduler_policy.json>scheduler_policy.json"
	schedulerExtraVolumes: 
	- name : "extendedsched"
	  hostPath : "/opt/cit_k8s_extensions/bin/"
	  mountPath : "/opt/cit_k8s_extensions/bin/"
		
	Place it in the kubernetes working path /etc/kubernetes/

	(c) Run below command,
			kubeadm init --config <<path_to>>/kubeadm_policy.yaml
			
2.  Transfer the public key from the CIT AH and place it in /etc/kubernetes/pki/ folder 
	(a) login to the machine where CIT Attestation Reporting Hub is installed 
	(b) scp the AH's public key (or use other ways to transfer the key to k8s)
		scp /opt/attestation-hub/configuration/hub_public_key.pem <<user>>@<<k8smasternode>>:/etc/kubernetes/pki/.


3. Copy extended scheduler configuration file cit-extended-scheduler-config.json to /opt/cit_k8s_extensions/bin directory

	cd ..
	cp cit-extended-scheduler-config.json /opt/cit_k8s_extensions/bin/

4. Edit cit-extended-scheduler-config.json file with appropriate URL ip address of k8smaster, port, paths to certificates(generated in pre-requisites 1) and keys(from step 2)

5. Place below systemd service file in /etc/systemd/system/ folder (available in the same directory as this README)
		citk8sscheduler.service

6. Run below commands to enable service daemon
	systemctl daemon-reload    #(to activate newly added service)
	

7. Run the extended scheduler using below command	

	systemctl start citk8sscheduler.service

8. To check status of this service run below command
	
	systemctl status citk8sscheduler.service

9. To stop this service run below command
	
	systemctl stop citk8sscheduler.service

10. To check the port where extended scheduler is listening,

	netstat -tlpn | grep 8888
